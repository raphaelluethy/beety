import type { NextPage } from "next";
import Head from "next/head";
import { useState } from "react";
import {
	DragDropContext,
	Draggable,
	Droppable,
	resetServerContext,
} from "react-beautiful-dnd";
import { trpc } from "../utils/trpc";
import z from "zod";

const Vegetable = z.object({
	id: z.string(),
	name: z.string(),
});

type DragVegetableType = z.infer<typeof Vegetable>;

const draggableVeggiesInit: DragVegetableType[] = [
	{
		id: "tomatoe",
		name: "Tomatoe",
	},
	{
		id: "carrot",
		name: "Carrot",
	},
	{
		id: "cucumber",
		name: "Cucumber",
	},
	{
		id: "onion",
		name: "Onion",
	},
	{
		id: "potato",
		name: "Potato",
	},
];

const Home: NextPage = () => {
	resetServerContext();
	const hello = trpc.useQuery(["example.hello", { text: "from tRPC" }]);

	const [draggableVeggies, setDraggableVeggies] =
		useState(draggableVeggiesInit);
	const handleOnDragEnd = (result: any) => {
		if (!result.destination) {
			return;
		}
		const { source, destination } = result;
		if (source.droppableId === destination.droppableId) {
			const items = [...draggableVeggies];
			const [removed] = items.splice(source.index, 1);
			const parsedRemoved = Vegetable.parse(removed);
			if (parsedRemoved !== undefined) {
				items.splice(destination.index, 0, removed);
			}
			setDraggableVeggies(items);
		}
	};

	return (
		<>
			<Head>
				<title>Beety</title>
				<meta name="description" content="Generated by create-t3-app" />
				<link rel="icon" href="/favicon.ico" />
			</Head>
			<main className="bg-green-200 w-screen h-screen ">
				<div className="grid grid-cols-1 h-1/2">
					<h1 className="text-4xl font-bold text-center my-10 h-fit">
						Beety - Easy garden arrangements
					</h1>
					<p className="text-4xl text-center">Comming soon...</p>
				</div>

				<div className="w-full">
					<h2 className="text-xl text-center underline underline-offset-1 font-bold my-2">
						Here you can try the prototype for the DnD feature:
					</h2>
					<DragDropContext onDragEnd={handleOnDragEnd}>
						<Droppable droppableId="veggies">
							{(provided) => (
								<ul
									{...provided.droppableProps}
									ref={provided.innerRef}
									className="flex flex-col justify-center items-center"
								>
									{draggableVeggies.map(
										({ id, name }, index) => {
											return (
												<Draggable
													key={id}
													draggableId={id}
													index={index}
												>
													{(provided) => (
														<li
															ref={
																provided.innerRef
															}
															{...provided.draggableProps}
															{...provided.dragHandleProps}
															className="text-center text-xl border-solid border-2 border-green-500 my-1 w-1/4 bg-green-300 text-grey-800"
														>
															<p>{name}</p>
														</li>
													)}
												</Draggable>
											);
										}
									)}
									{provided.placeholder}
								</ul>
							)}
						</Droppable>
					</DragDropContext>
				</div>
			</main>
		</>
	);
};

export default Home;
